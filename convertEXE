#!/bin/sh

# 
#  Program:	convertEXE
#
#  Author:	Andrew Shapton
#
#  Date:	28-AUG-2023
#
#  Version:	1.0
#
#  Revision History
#
#	28-AUG-2023	1.0	Initial Version

#
# Takes a Sphere executable binary file and converts it into a form which can be imported into the
# Vitual Sphere by Ben Zotto
#
# Parameters:	-i/--input	 <Executable filename>				   Mandatory
#              -p/--prefix  <2-letter cassette prefix>         Optional (default "XX")
#              -b/--base	 <Base Address in hex e.g. 0xfe00>	Optional (default 0x0400)
#              -t/--title	 <executable title>     	         Optional (default "None")
#              -o/--output	 <executable output filename>	      Optional
#              -h/--help	 Print this Help.
#              -l/--license	 Print the license notification (MIT).
#              -v/--version	 Print software version.

VERSION="v1.0"

# Set defaults
INPUTIMAGE="<NONE>"
OUTPUTIMAGE="<NONE>"
BASE="0400"
PREFIX="XX"
TITLE="None"

TODAY=`date`
MITLICENSE=$(cat <<EOF
\n
MIT LICENSE                                                                   \n
\n
Copyright (c) 2023 Andrew Shapton<alshapton@gmail.com>                        \n
                                                                              \n
Permission is hereby granted, free of charge, to any person obtaining a copy  \n
of this software and associated documentation files (the "Software"), to deal \n
in the Software without restriction, including without limitation the rights  \n
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell     \n
copies of the Software, and to permit persons to whom the Software is         \n
furnished to do so, subject to the following conditions:                      \n
                                                                              \n
The above copyright notice and this permission notice shall be included in all\n
copies or substantial portions of the Software.                               \n
                                                                              \n
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR    \n
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,      \n
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE   \n
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER        \n
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \n
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \n
SOFTWARE.                                                                     \n\n
EOF
)



############################################################
# Print License Function                                   #
############################################################
License()
{
   # Display License Information
   echo $MITLICENSE
}


############################################################
# writeOut Function                                        #
############################################################
writeOut()
{
echo $BASE
   # Write out to outputfile
   lower_case_prefix=$(echo "$PREFIX" | awk '{print tolower($0)}')
   echo "
/// Executable image for : $INPUTIMAGE
/// Date                 : $TODAY
///
/// Created by convertEXE $VERSION
const cassette_$lower_case_prefix  { title: '$TITLE', label: '$PREFIX/$BASE', data:
[
"  | sed "s/'/\"/g"> $INPUTIMAGE.stage2.$PID
   
  
//   rm $INPUTIMAGE.stage?.$PID
}
############################################################
# Version Function                                         #
############################################################
Version()
{
   # Display Version Information
   echo "convertROM Version: $VERSION"
}


############################################################
# Help Function                                            #
############################################################
Help()
{
   # Display Help
   echo "Takes a Sphere ROM binary file and converts it into a form which can be imported into the SPHERE-Firmware emulator"
   echo
   echo "Syntax: $0  [-b|i|l|h|o|v]"
   echo "options:"
   echo "-b     <Base Address - default 0xfe00>"
   echo "-h     Print this Help."
   echo "-i     <ROM Image input filename>."
   echo "-l     Print the license notification (MIT)."
   echo "-o     <ROM Image header output filename>."
   echo "-v     Print software version."
   echo
}

############################################################
# Main Program                                             #
############################################################
if [[ $# -eq 0 ]]; then
    echo "No parameters supplied.\n" 
    Help
    exit 2
fi

for option in "$@"; do
   case "$option" in
      -b|--base) # Capture Base address
         BASE=$2
	 shift
	 shift
	 ;;
      -h|--help) # display Help
         Help
         shift
	 ;;
      -i|--input) # Supply ROM image filename
         INPUTIMAGE=$2
	 shift
	 shift
  	 ;;
      -l|--license) # Show License
         License
         shift
	 ;;
      -o|--output) # Set output ROM image filename
         OUTPUTIMAGE=$2
         shift
	 shift
	 ;;
      -p|--prefix) # Supply cassette filename prefix
         PREFIX=$2
	 shift
	 shift
  	 ;;
      -t|--title) # Supply title
         TITLE=$2
	 shift
	 shift
  	 ;;
      -v|--version) # Show Program Version
         Version
         shift
	 ;;
      -*|--*) # Invalid option
         echo "Error: Invalid option"
         exit;;
   esac
done

if [[ "$INPUTIMAGE" == "<NONE>" ]]; then
    echo "No ROM Image file supplied"
    exit
fi

# Process executable file
od -t x1 $INPUTIMAGE | awk '{print "0x" $2 ",0x" $3 ",0x" $4 ",0x" $5 ",0x" $6 ",0x" $7 ",0x" $8 ",0x" $9 ",0x" $10 ",0x" $11 ",0x" $12 ",0x" $13 ",0x" $14  ",0x" $15 ",0x" $16 ",0x" $17 "," }' | grep -v ,,,, | sed "s/0x,//g"| awk '{print tolower($0)}' | sed "s/0X/0x/g" > $INPUTIMAGE.stage1.$PID


writeOut

# Remove the last comma from the file
#sed '$ s/.$//' $INPUTIMAGE.stage1.$PID >> $INPUTIMAGE.stage2.$PID


